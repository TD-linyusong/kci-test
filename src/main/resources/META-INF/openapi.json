{
  "components":{
    "parameters":{
      "userId":{
        "allowEmptyValue":false,
        "allowReserved":false,
        "description":"Id of the User to perform the operation",
        "example":"81471222-5798-11e9-ae24-57fa13b361e1",
        "in":"path",
        "name":"userId",
        "required":true,
        "schema":{
          "type":"string"
        }
      }
    },
    "requestBodies":{
      "userCreate":{
        "content":{
          "application/json":{
            "schema":{
              "$ref":"#/components/schemas/userCreate"
            }
          }
        },
        "description":"The User to create",
        "required":true
      },
      "userUpdate":{
        "content":{
          "application/json":{
            "schema":{
              "$ref":"#/components/schemas/userUpdate"
            }
          }
        },
        "description":"The User to update",
        "required":true
      }
    },
    "responses":{
      "unauthorized":{
        "content":{
          "application/json":{
            "schema":{
              "$ref":"#/components/schemas/error"
            }
          }
        },
        "description":"Unauthorized"
      },
      "forbidden":{
        "content":{
          "application/json":{
            "schema":{
              "$ref":"#/components/schemas/error"
            }
          }
        },
        "description":"Forbidden"
      },
      "internalError":{
        "content":{
          "application/json":{
            "schema":{
              "$ref":"#/components/schemas/error"
            }
          }
        },
        "description":"Internal Server Error"
      },
      "notFound":{
        "content":{
          "application/json":{
            "schema":{
              "$ref":"#/components/schemas/error"
            }
          }
        },
        "description":"Object Not found"
      }
    },
    "schemas":{
      "error":{
        "properties":{
          "code":{
            "type":"string"
          },
          "description":{
            "type":"string"
          },
          "fields":{
            "items":{
              "$ref":"#/components/schemas/error_field",
              "type":"object"
            },
            "type":"array"
          },
          "message":{
            "type":"string"
          },
          "reportingLevel":{
            "enum":[
              "ERROR",
              "WARNING",
              "INFO",
              "NONE"
            ],
            "nullable":true,
            "type":"string"
          }
        },
        "readOnly":true,
        "type":"object"
      },
      "error_field":{
        "properties":{
          "name":{
            "type":"string"
          },
          "description":{
            "type":"string"
          }
        },
        "type":"object"
      },
      "user":{
        "description":"The User object.",
        "properties":{
          "last_name":{
            "description":"The User last name.",
            "type":"string"
          },
          "id":{
            "description":"The User id.",
            "type":"string"
          },
          "first_name":{
            "description":"The User first name.",
            "type":"string"
          },
          "age":{
            "description":"The User age.",
            "nullable":true,
            "type":"integer"
          }
        },
        "readOnly":true,
        "type":"object"
      },
      "userCreate":{
        "description":"The User object to create.",
        "properties":{
          "firstName":{
            "type":"string"
          },
          "lastName":{
            "type":"string"
          },
          "last_name":{
            "description":"The User last name.",
            "maxLength":40,
            "type":"string"
          },
          "first_name":{
            "description":"The User first name.",
            "maxLength":40,
            "type":"string"
          },
          "age":{
            "description":"The User age.",
            "minimum":0,
            "nullable":true,
            "type":"integer"
          }
        },
        "required":[
          "first_name",
          "last_name",
          "age"
        ],
        "type":"object"
      },
      "userUpdate":{
        "description":"The User object to update.",
        "properties":{
          "firstName":{
            "type":"string"
          },
          "lastName":{
            "type":"string"
          },
          "last_name":{
            "description":"The User last name.",
            "maxLength":40,
            "type":"string"
          },
          "first_name":{
            "description":"The User first name.",
            "maxLength":40,
            "type":"string"
          },
          "age":{
            "description":"The User age.",
            "minimum":0,
            "nullable":true,
            "type":"integer"
          }
        },
        "required":[
          "first_name",
          "last_name",
          "age"
        ],
        "type":"object"
      }
    }
  },
  "info":{
    "title":"java-reference-implementation",
    "version":"1.0-SNAPSHOT"
  },
  "openapi":"3.0.1",
  "paths":{
    "/users/{user_id}":{
      "delete":{
        "deprecated":false,
        "operationId":"DeleteUser",
        "parameters":[
          {
            "allowEmptyValue":false,
            "allowReserved":false,
            "description":"",
            "in":"path",
            "name":"user_id",
            "required":false,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "500":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Internal Server Error"
          },
          "401":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Unauthorized"
          },
          "204":{
            "content":{
              "application/json":{
                "schema":{

                }
              }
            },
            "description":"User successfully deleted"
          },
          "403":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Forbidden"
          },
          "404":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"EventType not found"
          }
        },
        "summary":"Delete an existent User",
        "tags":[
          "Reference-App"
        ]
      },
      "get":{
        "deprecated":false,
        "operationId":"GetUser",
        "parameters":[
          {
            "allowEmptyValue":false,
            "allowReserved":false,
            "description":"Id of the User that needs to be fetched",
            "example":"81471222-5798-11e9-ae24-57fa13b361e1",
            "in":"path",
            "name":"user_id",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/user"
                }
              }
            },
            "description":"The user"
          },
          "500":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Internal Server Error"
          },
          "401":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Unauthorized"
          },
          "403":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Forbidden"
          },
          "404":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"EventType not found"
          }
        },
        "summary":"Find User by Id",
        "tags":[
          "Reference-App"
        ]
      },
      "put":{
        "deprecated":false,
        "operationId":"UpdateUser",
        "parameters":[
          {
            "allowEmptyValue":false,
            "allowReserved":false,
            "description":"Id of the EventType that needs to be updated",
            "example":"81471222-5798-11e9-ae24-57fa13b361e1",
            "in":"path",
            "name":"user_id",
            "required":true,
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/userUpdate"
              }
            }
          },
          "description":"The existing user to update",
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/user"
                }
              }
            },
            "description":"The Updated EventType"
          },
          "400":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Validation errors were found in the submitted data."
          },
          "500":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Internal Server Error"
          },
          "401":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Unauthorized"
          },
          "403":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Forbidden"
          },
          "404":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"EventType not found"
          }
        },
        "summary":"Update an existent User",
        "tags":[
          "Reference-App"
        ]
      }
    },
    "/users":{
      "get":{
        "deprecated":false,
        "operationId":"ListUser",
        "parameters":[
          {
            "in":"query",
            "name":"page",
            "schema":{
              "nullable":true,
              "type":"integer"
            },
            "style":"form"
          },
          {
            "in":"query",
            "name":"per_page",
            "schema":{
              "nullable":true,
              "type":"integer"
            },
            "style":"form"
          },
          {
            "in":"query",
            "name":"order_by",
            "schema":{
              "items":{
                "type":"string"
              },
              "type":"array"
            },
            "style":"form"
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{

                }
              }
            },
            "description":"Users successfully returned"
          },
          "500":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Internal Server Error"
          },
          "401":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Unauthorized"
          },
          "403":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Forbidden"
          },
          "404":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"EventType not found"
          }
        },
        "summary":"List Users",
        "tags":[
          "Reference-App"
        ]
      },
      "post":{
        "deprecated":false,
        "operationId":"CreateUser",
        "parameters":[
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/userCreate"
              }
            }
          },
          "description":"The EventType to create",
          "required":true
        },
        "responses":{
          "201":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/user"
                }
              }
            },
            "description":"The payload was accepted by the server and stored in the DB successfully",
            "headers":{
              "Location":{
                "allowEmptyValue":false,
                "deprecated":false,
                "description":"Information about the location of a newly created resource",
                "required":false,
                "schema":{
                  "type":"string"
                },
                "style":"simple"
              }
            }
          },
          "400":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Validation errors were found in the submitted data."
          },
          "500":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Internal Server Error"
          },
          "401":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Unauthorized"
          },
          "403":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/error"
                }
              }
            },
            "description":"Forbidden"
          }
        },
        "summary":"Create a new User",
        "tags":[
          "Reference-App"
        ]
      }
    }
  },
  "tags":[
    {
      "description":"",
      "name":"Reference-App"
    }
  ]
}